package com.duapps.affair.demo.intercepters;import ch.qos.logback.core.util.StringCollectionUtil;import com.duapps.affair.demo.aspect.controllerAop.Public;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.stereotype.Component;import org.springframework.web.method.HandlerMethod;import org.springframework.web.servlet.HandlerInterceptor;import org.springframework.web.servlet.ModelAndView;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.lang.reflect.Method;/** * @Author he.zhou * @Date 2020-08-17 */@Slf4j//@Componentpublic class ApiAuthIntercepter implements HandlerInterceptor {    @Override    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {        log.info("ApiAuthIntercepter---->开始进入方法");        if (handler instanceof HandlerMethod) {            HandlerMethod handlerMethod = (HandlerMethod) handler;            Class<?> controllerClazz = handlerMethod.getBeanType();            if (controllerClazz.isAnnotationPresent(Public.class)) {                return true;            }            Method method = handlerMethod.getMethod();            if (method.getAnnotation(Public.class) != null) {                return true;            }            String authKey = request.getHeader("authKey"); //登录的token            if (!StringUtils.isNotEmpty(authKey)) {                throw new RuntimeException();            }        }        return true;    }    @Override    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {        log.info("ApiAuthIntercepter---->postHandle");    }    @Override    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {        log.info("ApiAuthIntercepter---->afterCompletion ");    }}